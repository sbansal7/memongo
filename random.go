// Copyright 2021 Tryvium Travels LTD
// Copyright 2019-2020 Ben Weissmann
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package memongo

import (
	"crypto/rand"
	"fmt"
	"math/big"
)

// DBNameLen is the length of a database name generated by RandomDatabase().
// It's OK to change this, but not concurrently with calls to RandomDatabase.
const DBNameLen = 15

// DBNameChars is the set of characters used by RandomDatabase().
// It's OK to change this, but not concurrently with calls to RandomDatabase.
const DBNameChars = "abcdefghijklmnopqrstuvwxyz"

// RandomDatabase returns a random valid mongo database name. You can use to
// to pick a new database name for each test to isolate tests from each other
// without having to tear down the whole server.
//
// This function will panic if it cannot generate a random number.
func RandomDatabase() string {
	dbChars := make([]byte, DBNameLen)
	for i := 0; i < DBNameLen; i++ {
		bigN, err := rand.Int(rand.Reader, big.NewInt(int64(len(DBNameChars))))
		if err != nil {
			panic(fmt.Errorf("error getting a random int: %s", err))
		}

		dbChars[i] = DBNameChars[int(bigN.Int64())]
	}

	return string(dbChars)
}
